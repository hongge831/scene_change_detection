layer {
  name: "data"
  type: "Data"
  top: "pair_data"
  top: "sim"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "/media/yff/Data/VOC_HY/cjDATA/new_data/data/trainleveldb"
    batch_size: 32 #*iter_size
    backend:LEVELDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "pair_data"
  top: "sim"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "/media/yff/Data/VOC_HY/cjDATA/new_data/data/trainleveldb"
    batch_size: 25 #not *iter_size
    backend:LEVELDB
  }
}

layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "pair_data"
  top: "data"
  top: "data_p"
  slice_param {
    slice_dim: 1
  }
}
###################################

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}

layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5_3"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  inner_product_param {
    num_output: 1000
  }
}
#######################
layer {
  name: "conv1_1_p"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1_p"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1_p"
  type: "ReLU"
  bottom: "conv1_1_p"
  top: "conv1_1_p"
}

layer {
  name: "conv1_2_p"
  type: "Convolution"
  bottom: "conv1_1_p"
  top: "conv1_2_p"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}

layer {
  name: "relu1_2_p"
  type: "ReLU"
  bottom: "conv1_2_p"
  top: "conv1_2_p"
}
layer {
  name: "pool1_p"
  type: "Pooling"
  bottom: "conv1_2_p"
  top: "pool1_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv2_1_p"
  type: "Convolution"
  bottom: "pool1_p"
  top: "conv2_1_p"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1_p"
  type: "ReLU"
  bottom: "conv2_1_p"
  top: "conv2_1_p"
}

layer {
  name: "conv2_2_p"
  type: "Convolution"
  bottom: "conv2_1_p"
  top: "conv2_2_p"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}

layer {
  name: "relu2_2_p"
  type: "ReLU"
  bottom: "conv2_2_p"
  top: "conv2_2_p"
}

layer {
  name: "pool2_p"
  type: "Pooling"
  bottom: "conv2_2_p"
  top: "pool2_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv3_1_p"
  type: "Convolution"
  bottom: "pool2_p"
  top: "conv3_1_p"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}

layer {
  name: "relu3_1_p"
  type: "ReLU"
  bottom: "conv3_1_p"
  top: "conv3_1_p"
}


layer {
  name: "conv3_2_p"
  type: "Convolution"
  bottom: "conv3_1_p"
  top: "conv3_2_p"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2_p"
  type: "ReLU"
  bottom: "conv3_2_p"
  top: "conv3_2_p"
}


layer {
  name: "conv3_3_p"
  type: "Convolution"
  bottom: "conv3_2_p"
  top: "conv3_3_p"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}

layer {
  name: "relu3_3_p"
  type: "ReLU"
  bottom: "conv3_3_p"
  top: "conv3_3_p"
}

layer {
  name: "pool3_p"
  type: "Pooling"
  bottom: "conv3_3_p"
  top: "pool3_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv4_1_p"
  type: "Convolution"
  bottom: "pool3_p"
  top: "conv4_1_p"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}

layer {
  name: "relu4_1_p"
  type: "ReLU"
  bottom: "conv4_1_p"
  top: "conv4_1_p"
}

layer {
  name: "conv4_2_p"
  type: "Convolution"
  bottom: "conv4_1_p"
  top: "conv4_2_p"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}

layer {
  name: "relu4_2_p"
  type: "ReLU"
  bottom: "conv4_2_p"
  top: "conv4_2_p"
}
layer {
  name: "conv4_3_p"
  type: "Convolution"
  bottom: "conv4_2_p"
  top: "conv4_3_p"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}

layer {
  name: "relu4_3_p"
  type: "ReLU"
  bottom: "conv4_3_p"
  top: "conv4_3_p"
}

layer {
  name: "pool4_p"
  type: "Pooling"
  bottom: "conv4_3_p"
  top: "pool4_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv5_1_p"
  type: "Convolution"
  bottom: "pool4_p"
  top: "conv5_1_p"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}


layer {
  name: "relu5_1_p"
  type: "ReLU"
  bottom: "conv5_1_p"
  top: "conv5_1_p"
}

layer {
  name: "conv5_2_p"
  type: "Convolution"
  bottom: "conv5_1_p"
  top: "conv5_2_p"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}

layer {
  name: "relu5_2_p"
  type: "ReLU"
  bottom: "conv5_2_p"
  top: "conv5_2_p"
}


layer {
  name: "conv5_3_p"
  type: "Convolution"
  bottom: "conv5_2_p"
  top: "conv5_3_p"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}

layer {
  name: "relu5_3_p"
  type: "ReLU"
  bottom: "conv5_3_p"
  top: "conv5_3_p"
}

layer {
  name: "pool5_p"
  type: "Pooling"
  bottom: "conv5_3_p"
  top: "pool5_p"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "fc6_p"
  type: "InnerProduct"
  bottom: "pool5_p"
  top: "fc6_p"
  inner_product_param {
    num_output: 4096
  }
}

layer {
  name: "relu6_p"
  type: "ReLU"
  bottom: "fc6_p"
  top: "fc6_p"
}
layer {
  name: "drop6_p"
  type: "Dropout"
  bottom: "fc6_p"
  top: "fc6_p"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc7_p"
  type: "InnerProduct"
  bottom: "fc6_p"
  top: "fc7_p"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7_p"
  type: "ReLU"
  bottom: "fc7_p"
  top: "fc7_p"
}

layer {
  name: "drop7_p"
  type: "Dropout"
  bottom: "fc7_p"
  top: "fc7_p"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc8_p"
  type: "InnerProduct"
  bottom: "fc7_p"
  top: "fc8_p"
  inner_product_param {
    num_output: 1000
  }
}

layer {
  name: "loss"
  type: "ContrastiveLoss"
  bottom: "fc8"
  bottom: "fc8_p"
  bottom: "sim"
  top: "loss"
  contrastive_loss_param {
    margin: 1
  }
}













